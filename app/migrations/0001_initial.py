# Generated by Django 4.0.3 on 2022-05-07 08:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abilities',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'abilities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AbilityUpgrades',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ability_upgrades',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chats',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('nick', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClusterRegions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cluster_regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameObjectives',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('key', models.IntegerField(blank=True, null=True)),
                ('subtype', models.TextField(blank=True, null=True)),
                ('team', models.IntegerField(blank=True, null=True)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('slot', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_objectives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Heroes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('localized_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'heroes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('start_time', models.IntegerField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('tower_status_radiant', models.IntegerField(blank=True, null=True)),
                ('tower_status_dire', models.IntegerField(blank=True, null=True)),
                ('barracks_status_radiant', models.IntegerField(blank=True, null=True)),
                ('barracks_status_dire', models.IntegerField(blank=True, null=True)),
                ('first_blood_time', models.IntegerField(blank=True, null=True)),
                ('game_mode', models.IntegerField(blank=True, null=True)),
                ('radiant_win', models.BooleanField(blank=True, null=True)),
                ('negative_votes', models.IntegerField(blank=True, null=True)),
                ('positive_votes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'matches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MatchesPlayersDetails',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('player_slot', models.IntegerField(blank=True, null=True)),
                ('gold', models.IntegerField(blank=True, null=True)),
                ('gold_spent', models.IntegerField(blank=True, null=True)),
                ('gold_per_min', models.IntegerField(blank=True, null=True)),
                ('xp_per_min', models.IntegerField(blank=True, null=True)),
                ('kills', models.IntegerField(blank=True, null=True)),
                ('deaths', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('denies', models.IntegerField(blank=True, null=True)),
                ('last_hits', models.IntegerField(blank=True, null=True)),
                ('stuns', models.IntegerField(blank=True, null=True)),
                ('hero_damage', models.IntegerField(blank=True, null=True)),
                ('hero_healing', models.IntegerField(blank=True, null=True)),
                ('tower_damage', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('leaver_status', models.IntegerField(blank=True, null=True)),
                ('xp_hero', models.IntegerField(blank=True, null=True)),
                ('xp_creep', models.IntegerField(blank=True, null=True)),
                ('xp_roshan', models.IntegerField(blank=True, null=True)),
                ('xp_other', models.IntegerField(blank=True, null=True)),
                ('gold_other', models.IntegerField(blank=True, null=True)),
                ('gold_death', models.IntegerField(blank=True, null=True)),
                ('gold_buyback', models.IntegerField(blank=True, null=True)),
                ('gold_abandon', models.IntegerField(blank=True, null=True)),
                ('gold_sell', models.IntegerField(blank=True, null=True)),
                ('gold_destroying_structure', models.IntegerField(blank=True, null=True)),
                ('gold_killing_heroes', models.IntegerField(blank=True, null=True)),
                ('gold_killing_creeps', models.IntegerField(blank=True, null=True)),
                ('gold_killing_roshan', models.IntegerField(blank=True, null=True)),
                ('gold_killing_couriers', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'matches_players_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patches',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('release_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'patches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerActions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('unit_order_none', models.IntegerField(blank=True, null=True)),
                ('unit_order_move_to_position', models.IntegerField(blank=True, null=True)),
                ('unit_order_move_to_target', models.IntegerField(blank=True, null=True)),
                ('unit_order_attack_move', models.IntegerField(blank=True, null=True)),
                ('unit_order_attack_target', models.IntegerField(blank=True, null=True)),
                ('unit_order_cast_position', models.IntegerField(blank=True, null=True)),
                ('unit_order_cast_target', models.IntegerField(blank=True, null=True)),
                ('unit_order_cast_target_tree', models.IntegerField(blank=True, null=True)),
                ('unit_order_cast_no_target', models.IntegerField(blank=True, null=True)),
                ('unit_order_cast_toggle', models.IntegerField(blank=True, null=True)),
                ('unit_order_hold_position', models.IntegerField(blank=True, null=True)),
                ('unit_order_train_ability', models.IntegerField(blank=True, null=True)),
                ('unit_order_drop_item', models.IntegerField(blank=True, null=True)),
                ('unit_order_give_item', models.IntegerField(blank=True, null=True)),
                ('unit_order_pickup_item', models.IntegerField(blank=True, null=True)),
                ('unit_order_pickup_rune', models.IntegerField(blank=True, null=True)),
                ('unit_order_purchase_item', models.IntegerField(blank=True, null=True)),
                ('unit_order_sell_item', models.IntegerField(blank=True, null=True)),
                ('unit_order_disassemble_item', models.IntegerField(blank=True, null=True)),
                ('unit_order_move_item', models.IntegerField(blank=True, null=True)),
                ('unit_order_cast_toggle_auto', models.IntegerField(blank=True, null=True)),
                ('unit_order_stop', models.IntegerField(blank=True, null=True)),
                ('unit_order_buyback', models.IntegerField(blank=True, null=True)),
                ('unit_order_glyph', models.IntegerField(blank=True, null=True)),
                ('unit_order_eject_item_from_stash', models.IntegerField(blank=True, null=True)),
                ('unit_order_cast_rune', models.IntegerField(blank=True, null=True)),
                ('unit_order_ping_ability', models.IntegerField(blank=True, null=True)),
                ('unit_order_move_to_direction', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'player_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerRatings',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('total_wins', models.IntegerField(blank=True, null=True)),
                ('total_matches', models.IntegerField(blank=True, null=True)),
                ('trueskill_mu', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('trueskill_sigma', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'player_ratings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('nick', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerTimes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('gold', models.IntegerField(blank=True, null=True)),
                ('lh', models.IntegerField(blank=True, null=True)),
                ('xp', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'player_times',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseLogs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'purchase_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teamfights',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('start_teamfight', models.IntegerField(blank=True, null=True)),
                ('end_teamfight', models.IntegerField(blank=True, null=True)),
                ('last_death', models.IntegerField(blank=True, null=True)),
                ('deaths', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'teamfights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamfightsPlayers',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('buyback', models.IntegerField(blank=True, null=True)),
                ('damage', models.IntegerField(blank=True, null=True)),
                ('deaths', models.IntegerField(blank=True, null=True)),
                ('gold_delta', models.IntegerField(blank=True, null=True)),
                ('xp_start', models.IntegerField(blank=True, null=True)),
                ('xp_end', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'teamfights_players',
                'managed': False,
            },
        ),
    ]
